generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(cuid())
  email        String       @unique
  passwordHash String
  name         String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  completions  Completion[]
  invites      Invite[]
  memberships  PairMember[]
}

model Pair {
  id        String       @id @default(cuid())
  name      String       @default("Bucket List")
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  invites   Invite[]
  items     Item[]
  members   PairMember[]
}

model PairMember {
  id     String @id @default(cuid())
  userId String
  pairId String
  role   String @default("member")
  pair   Pair   @relation(fields: [pairId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, pairId])
}

model Invite {
  id        String    @id @default(cuid())
  code      String    @unique
  creatorId String
  pairId    String?
  createdAt DateTime  @default(now())
  expiresAt DateTime
  usedAt    DateTime?
  creator   User      @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  pair      Pair?     @relation(fields: [pairId], references: [id], onDelete: Cascade)
}

model Item {
  id          String      @id @default(cuid())
  pairId      String
  title       String
  notes       String?
  position    Int         @default(0)
  dueDate     DateTime?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  completedAt DateTime?
  completion  Completion?
  pair        Pair        @relation(fields: [pairId], references: [id], onDelete: Cascade)

  @@index([pairId, position])
}

model Completion {
  id        String   @id @default(cuid())
  itemId    String   @unique
  userId    String
  photoPath String
  caption   String?
  createdAt DateTime @default(now())
  item      Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
